/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import Session.session;
import config.koneksi;
import java.awt.HeadlessException;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.swing.JOptionPane;

public class DashboardCustomer extends javax.swing.JFrame {

    /**
     * Creates new form DashboardCustomer
     */
    private Connection conn;

    public DashboardCustomer() {
        initComponents();
        conn = koneksi.getConnection();
        getData();
        nonAktifButton();
        aktifButton();
    }

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);
        int customerId = session.getCustomerId();
        String name = session.getName();
        label_username.setText(name);
        try {
            String sql = "SELECT * FROM orders WHERE customer_id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, customerId);
            ResultSet rs = ps.executeQuery();
            int no = 1;
            while (rs.next()) {
                int idPesanan = rs.getInt("order_id");
                String nama_baju = rs.getString("nama_baju");
                int quantity = rs.getInt("quantity");
                String color = rs.getString("color");
                String bahan = rs.getString("bahan");
                String ukuran = rs.getString("ukuran");
                int harga = rs.getInt("harga");
                int dibayarkan = rs.getInt("dibayarkan");
                String status = rs.getString("status");

                Object[] row = {no, idPesanan, nama_baju, quantity, color, bahan, ukuran, harga, dibayarkan, status};
                model.addRow(row);
                no++;
            }
            ps.close();
            rs.close();

        } catch (SQLException e) {
            Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, "Koneksi ke database gagal", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat pesanan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_data = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nama_baju = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        warna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bahan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ukuran = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bayar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        btn_tambah = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_bayar = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        label_username = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        biaya = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_data.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tbl_data.setForeground(new java.awt.Color(102, 102, 102));
        tbl_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "ID Pesanan", "Nama Baju", "Kuantitas", "Warna", "Bahan", "Ukuran", "Harga", "Dibayarkan", "Status"
            }
        ));
        tbl_data.setGridColor(new java.awt.Color(204, 204, 204));
        tbl_data.setRowHeight(30);
        tbl_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_data);

        jLabel1.setText("Selamat Datang : ");

        jLabel2.setText("Nama Baju");

        jLabel3.setText("Quantity");

        jLabel4.setText("Warna");

        jLabel5.setText("Bahan");

        jLabel6.setText("Ukuran");

        jLabel7.setText("Bayar");

        jLabel8.setText("Search");

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_bayar.setText("Bayar");
        btn_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bayarActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        label_username.setText("User");

        jLabel9.setText("Biaya Yang Harus Dibayarkan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nama_baju, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(warna, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(bahan, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(ukuran, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(1, 1, 1)
                                .addComponent(label_username))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(biaya, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(label_username))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nama_baju, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(warna, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bahan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ukuran, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(biaya, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        session.logout();
        LoginForm login = new LoginForm();
        login.setVisible(true);

        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void btn_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bayarActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris yang akan diperbarui");
            return;
        }

        String id = tbl_data.getValueAt(selectedRow, 1).toString();
        String harga = biaya.getText();
        String byr = bayar.getText();

        int hargaInt = Integer.parseInt(harga);
        int bayarInt = Integer.parseInt(byr);

        if (bayarInt < hargaInt) {
            JOptionPane.showMessageDialog(this, "Biaya Yang Dibayarkan Kurang!");
            return;
        }

        try {
            String sql = "UPDATE orders set dibayarkan = ?, status = ? WHERE order_id = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setInt(1, bayarInt);
            st.setString(2, "Pesanan Sedang Diproses");
            st.setString(3, id);

            int rowDelete = st.executeUpdate();
            if (rowDelete > 0) {
                JOptionPane.showMessageDialog(this, "Pesanan Berhasil Dibayar");
            }

            st.close();
        } catch (SQLException e) {
            Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, null, e);
        }

        resetForm();
        getData();
        aktifButton();
        nonAktifButton();

    }//GEN-LAST:event_btn_bayarActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        resetForm();
        aktifButton();
        nonAktifButton();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris yang akan diperbarui");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Menghapus Data ini ? ", "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String id = tbl_data.getValueAt(selectedRow, 1).toString();

            try {
                String sql = "DELETE FROM orders WHERE order_id = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, id);

                int rowDelete = st.executeUpdate();
                if (rowDelete > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                }

                st.close();
            } catch (SQLException e) {
                Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        resetForm();
        getData();
        aktifButton();
        nonAktifButton();
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Baris yang akan diperbarui");
            return;
        }

        String id = tbl_data.getValueAt(selectedRow, 1).toString();
        String Nbaju = nama_baju.getText();
        String qty = quantity.getText();
        String color = warna.getText();
        String bhn = bahan.getText();
        String ukr = ukuran.getText();
        String byr = bayar.getText();

        if (bayar.getText().isEmpty()) {
            byr = "";
        }

        if (Nbaju.isEmpty() || qty.isEmpty() || color.isEmpty() || bhn.isEmpty() || ukr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Form Wajib Diisi", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
//        int customerId = session.getCustomerId();
        try {
            String sql = "UPDATE orders SET nama_baju = ?, quantity = ?, color = ?, bahan = ?, ukuran = ?, dibayarkan = ? WHERE order_id = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, Nbaju);
            st.setString(2, qty);
            st.setString(3, color);
            st.setString(4, bhn);
            st.setString(5, ukr);
            st.setString(6, byr);
            st.setString(7, id);

            int rowUpdated = st.executeUpdate();
            if (rowUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data Pesanan berhasil diupdate");
                resetForm();
                getData();
            }
            st.close();
        } catch (HeadlessException | SQLException e) {
            Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, "Koneksi ke database gagal", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengupdate pesanan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        String Nbaju = nama_baju.getText();
        String qty = quantity.getText();
        String color = warna.getText();
        String bhn = bahan.getText();
        String ukr = ukuran.getText();
        String status = "Menunggu Konfirmasi";

        if (Nbaju.isEmpty() || qty.isEmpty() || color.isEmpty() || bhn.isEmpty() || ukr.isEmpty() || status.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Form Wajib Diisi", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int customerId = session.getCustomerId();
        try {
            String sql = "INSERT INTO orders (customer_id, nama_baju, quantity, color, bahan, ukuran, status) VALUE (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setInt(1, customerId);
            st.setString(2, Nbaju);
            st.setString(3, qty);
            st.setString(4, color);
            st.setString(5, bhn);
            st.setString(6, ukr);
            st.setString(7, status);

            int rowInserted = st.executeUpdate();
            if (rowInserted > 0) {
                JOptionPane.showMessageDialog(this, "Data Pesanan berhasil ditambahkan");
                resetForm();
                getData();
            }
            st.close();
        } catch (SQLException e) {
            Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, "Koneksi ke database gagal", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambah pesanan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void tbl_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataMouseClicked
        int selectedRow = tbl_data.getSelectedRow();
        if (selectedRow != -1) {
            String id = tbl_data.getValueAt(selectedRow, 1).toString();
            String nBaju = tbl_data.getValueAt(selectedRow, 2).toString();
            String qty = tbl_data.getValueAt(selectedRow, 3).toString();
            String color = tbl_data.getValueAt(selectedRow, 4).toString();
            String bhn = tbl_data.getValueAt(selectedRow, 5).toString();
            String ukrn = tbl_data.getValueAt(selectedRow, 6).toString();
            String harga = tbl_data.getValueAt(selectedRow, 7).toString();
            String dibyrkn = tbl_data.getValueAt(selectedRow, 8).toString();
            String stats = tbl_data.getValueAt(selectedRow, 9).toString();
            
            int hargaOffer = Integer.parseInt(harga);

            if ("Pesanan Sedang Diproses".equals(stats) || "Pesanan Selesai".equals(stats)) {
                nama_baju.setText(nBaju);
                quantity.setText(qty);
                warna.setText(color);
                bahan.setText(bhn);
                ukuran.setText(ukrn);
                biaya.setText(harga);
                bayar.setText(dibyrkn);
                nama_baju.setEnabled(false);
                quantity.setEnabled(false);
                warna.setEnabled(false);
                bahan.setEnabled(false);
                ukuran.setEnabled(false);
                biaya.setEnabled(false);
                bayar.setEnabled(false);
                btn_tambah.setEnabled(false);
                btn_update.setEnabled(false);
                btn_hapus.setEnabled(false);
                btn_bayar.setEnabled(false);
            } else if (hargaOffer > 0) {
                nama_baju.setText(nBaju);
                quantity.setText(qty);
                warna.setText(color);
                bahan.setText(bhn);
                ukuran.setText(ukrn);
                biaya.setText(harga);
                nama_baju.setEnabled(false);
                quantity.setEnabled(false);
                warna.setEnabled(false);
                bahan.setEnabled(false);
                ukuran.setEnabled(false);
                biaya.setEnabled(true);
                bayar.setEnabled(true);
                btn_tambah.setEnabled(false);
                btn_update.setEnabled(false);
                btn_hapus.setEnabled(true);
                btn_bayar.setEnabled(true);
            } else {
                nama_baju.setEnabled(true);
                quantity.setEnabled(true);
                warna.setEnabled(true);
                bahan.setEnabled(true);
                ukuran.setEnabled(true);
                biaya.setEnabled(false);
                bayar.setEnabled(false);
                nama_baju.setText(nBaju);
                quantity.setText(qty);
                warna.setText(color);
                bahan.setText(bhn);
                ukuran.setText(ukrn);
                biaya.setText(harga);
                bayar.setText(dibyrkn);
                btn_tambah.setEnabled(false);
                btn_update.setEnabled(true);
                btn_hapus.setEnabled(true);
                btn_bayar.setEnabled(false);
            }

        }


    }//GEN-LAST:event_tbl_dataMouseClicked

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl_data.getModel();
        model.setRowCount(0);
        int customerId = session.getCustomerId();

        String cari = search.getText();

        try {
            String sql = "SELECT * FROM orders WHERE customer_id = ? AND (nama_baju LIKE ? OR quantity LIKE ? OR color LIKE ? OR bahan LIKE ? OR ukuran LIKE ? OR harga LIKE ? OR status LIKE ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, customerId);
            String cariWildcard = "%" + cari + "%";
            for (int i = 2; i <= 8; i++) {
                ps.setString(i, cariWildcard);
            }
            ResultSet rs = ps.executeQuery();

            int no = 1;

            while (rs.next()) {
                int idPesanan = rs.getInt("order_id");
                String nama_baju = rs.getString("nama_baju");
                int quantity = rs.getInt("quantity");
                String color = rs.getString("color");
                String bahan = rs.getString("bahan");
                String ukuran = rs.getString("ukuran");
                int harga = rs.getInt("harga");
                int dibayarkan = rs.getInt("dibayarkan");
                String status = rs.getString("status");

                Object[] row = {no, idPesanan, nama_baju, quantity, color, bahan, ukuran, harga, dibayarkan, status};
                model.addRow(row);
                no++;
            }
            ps.close();
            rs.close();

        } catch (SQLException e) {
            Logger.getLogger(DashboardCustomer.class.getName()).log(Level.SEVERE, "Koneksi ke database gagal", e);
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat pesanan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bahan;
    private javax.swing.JTextField bayar;
    private javax.swing.JTextField biaya;
    private javax.swing.JButton btn_bayar;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_username;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nama_baju;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField search;
    private javax.swing.JTable tbl_data;
    private javax.swing.JTextField ukuran;
    private javax.swing.JTextField warna;
    // End of variables declaration//GEN-END:variables

    private void resetForm() {
        nama_baju.setText("");
        quantity.setText("");
        warna.setText("");
        bahan.setText("");
        ukuran.setText("");
        bayar.setText("");
        biaya.setText("");
    }

    private void nonAktifButton() {
        btn_update.setEnabled(false);
        btn_hapus.setEnabled(false);
        btn_bayar.setEnabled(false);
        biaya.setEnabled(false);
        bayar.setEnabled(false);
    }

    private void aktifButton() {
        btn_tambah.setEnabled(true);
        btn_clear.setEnabled(true);
    }

}
